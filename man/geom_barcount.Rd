% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-barcount.R, R/stat-barcount.R
\name{geom_barcount}
\alias{geom_barcount}
\alias{stat_barcount}
\title{Data count for barcounts}
\usage{
geom_barcount(
  mapping = NULL,
  data = NULL,
  stat = "barcount",
  position = "stack",
  ...,
  overall.stack = TRUE,
  digits = 3,
  width = NULL,
  na.rm = FALSE,
  orientation = NA,
  show.legend = NA,
  inherit.aes = TRUE
)

stat_barcount(
  mapping = NULL,
  data = NULL,
  geom = "barcount",
  position = "stack",
  ...,
  overall.stack = TRUE,
  digits = 3,
  width = NULL,
  na.rm = FALSE,
  orientation = NA,
  show.legend = NA,
  inherit.aes = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}} or
\code{\link[ggplot2:aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}

\item{overall.stack}{Defines whether an overall count is displayed for
stacked bars or if the counts of each individual component of the
stacked bars should be displayed.}

\item{digits}{Integer indicating the number of significant digits to be used.
Recognized values are \code{0..22}. Use \code{digits = 0} to display as
integers.}

\item{width}{Bar width. By default, set to 90\% of the resolution of the data.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{orientation}{The orientation of the layer. The default (\code{NA})
automatically determines the orientation from the aesthetic mapping. In the
rare event that this fails it can be given explicitly by setting \code{orientation}
to either \code{"x"} or \code{"y"}. See the \emph{Orientation} section for more detail.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}

\item{geom, stat}{Use to override the default connection between
\code{geom_barcount} and \code{stat_barcount}.}
}
\description{
This function is intended to work in combination with
\code{\link[ggplot2]{geom_bar}} to display the sum of the values represented
by each bar. Like \code{\link[ggplot2]{geom_bar}}, this function works if the
\code{x} and/or \code{y} aesthetics are provided.
}
\section{Orientation}{
 
This geom treats each axis differently and, thus, can thus have two orientations. Often the orientation is easy to deduce from a combination of the given mappings and the types of positional scales in use. Thus, ggplot2 will by default try to guess which orientation the layer should have. Under rare circumstances, the orientation is ambiguous and guessing may fail. In that case the orientation can be specified directly using the \code{orientation} parameter, which can be either \code{"x"} or \code{"y"}. The value gives the axis that the geom should run along, \code{"x"} being the default orientation you would expect for the geom.
}

\examples{
\dontrun{
p <- ggplot(mpg)
p + aes(x = class) + geom_bar() + geom_barcount()

# Map class to y instead to flip the orientation
p + aes(y = class) + geom_bar() + geom_barcount()

# For stacked position
p <- ggplot(diamonds, aes(color, fill = cut))
p + geom_bar(position = 'stack') + geom_barcount()
p + geom_bar(position = 'stack') + geom_barcount(overall.stack = FALSE)

# For dodged position
p + geom_bar(position = 'dodge') + geom_barcount(position = position_dodge(width = 0.9))

# For fill position
p + geom_bar(position = 'fill') + geom_barcount(position = position_fill())

# For fillpercent position
p + geom_bar(position = 'fillpercent') + geom_barcount(position = position_fillpercent()) + ylab('count (\%)')

}
}
\seealso{
\code{\link[ggplot2]{geom_bar}}
}
