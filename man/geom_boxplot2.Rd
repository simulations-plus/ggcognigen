% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-boxplot2.R, R/stat-boxplot2.R
\name{geom_boxplot2}
\alias{geom_boxplot2}
\alias{stat_boxplot2}
\title{A variant on box and whiskers plot (in the style of Tukey, or not...)}
\usage{
geom_boxplot2(
  mapping = NULL,
  data = NULL,
  stat = "boxplot2",
  position = "dodge2",
  ...,
  outlier.position = "jitter",
  outlier.colour = NULL,
  outlier.color = NULL,
  outlier.fill = NULL,
  outlier.shape = 19,
  outlier.size = 1.5,
  outlier.stroke = 0.5,
  outlier.alpha = NULL,
  notch = FALSE,
  notchwidth = 0.5,
  varwidth = FALSE,
  na.rm = FALSE,
  orientation = NA,
  show.legend = NA,
  inherit.aes = TRUE
)

stat_boxplot2(
  mapping = NULL,
  data = NULL,
  geom = "boxplot2",
  position = "dodge2",
  ...,
  coef = 1.5,
  na.rm = FALSE,
  orientation = NA,
  show.legend = NA,
  inherit.aes = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}} or
\code{\link[ggplot2:aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}

\item{outlier.position}{By default, outliers are displayed with a small degree of jitter. Sometimes
it can be useful to hide the outliers, for example when overlaying the raw
data points on top of the boxplot. Hiding the outliers can be achieved by
setting `outlier.position = NULL`. Importantly, this does not remove the outliers,
it only hides them, so the range calculated for the y-axis will be the
same with outliers shown and outliers hidden. If needed, outliers can be
displayed without jitter by setting `outlier.position = 'identity'`.}

\item{outlier.colour, outlier.color, outlier.fill, outlier.shape, outlier.size, outlier.stroke, outlier.alpha}{Aesthetics for outliers inherited from the original [geom_boxplot()] function but that are
not used in geom_boxplot2. Instead, outliers inherits colors, shapes, sizes from the box
aesthetics. These aesthetics were included to maintain code compatibility with
call to [geom_boxplot()].}

\item{notch}{If `FALSE` (default) make a standard box plot. If
`TRUE`, make a notched box plot. Notches are used to compare groups;
if the notches of two boxes do not overlap, this suggests that the medians
are significantly different.}

\item{notchwidth}{For a notched box plot, width of the notch relative to
the body (defaults to `notchwidth = 0.5`).}

\item{varwidth}{If `FALSE` (default) make a standard box plot. If
`TRUE`, boxes are drawn with widths proportional to the
square-roots of the number of observations in the groups (possibly
weighted, using the `weight` aesthetic).}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{orientation}{The orientation of the layer. The default (\code{NA})
automatically determines the orientation from the aesthetic mapping. In the
rare event that this fails it can be given explicitly by setting \code{orientation}
to either \code{"x"} or \code{"y"}. See the \emph{Orientation} section for more detail.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}

\item{geom, stat}{Use to override the default connection between
`geom_boxplot2` and `stat_boxplot2`.}

\item{coef}{Length of the whiskers as multiple of IQR (if lower than 50) or a confidence interval (if greater than or equal to 50). Defaults to 1.5.}
}
\description{
The boxplot compactly displays the distribution of a continuous variable.
It visualises five summary statistics (the median, two hinges
and two whiskers), and all "outlying" points individually. [geom_boxplot2()]
is a variant on the [geom_boxplot()] function from the ggplot package.
It allows users to set whiskers limits based upon confidence interval rather
than a multiple of the IQR, allows to display outliers with jitter, and
provides a slightly different graphical styles when grouping/coloring is
used.
}
\section{Summary statistics}{

The lower and upper hinges correspond to the first and third quartiles
(the 25th and 75th percentiles). This differs slightly from the method used
by the [boxplot()] function, and may be apparent with small samples.
See [boxplot.stats()] for for more information on how hinge
positions are calculated for [boxplot()].

By default, the upper whisker extends from the hinge to the largest value no
further than 1.5 * IQR from the hinge (where IQR is the inter-quartile range,
or distance between the first and third quartiles). The lower whisker extends
from the hinge to the smallest value at most 1.5 * IQR of the hinge. Data beyond
the end of the whiskers are called "outlying" points and are plotted
individually. If a `coef` argument is provided to the function call, the
whiskers may extend to alternative limits. If `coef` is set to a value lower
than 50, the value is used a multiplier to the IQR (default is 1.5 as explained
above). If `coef` is set to value greater than or equal to 50, the whiskers
extend to the limit of the `coef` confidence interval.

In a notched box plot, the notches extend `1.58 * IQR / sqrt(n)`.
This gives a roughly 95% confidence interval for comparing medians.
See McGill et al. (1978) for more details.
}

\section{Computed variables}{

\describe{
  \item{width}{width of boxplot}
  \item{ymin}{lower whisker = smallest observation greater than or equal to lower hinge - 1.5 * IQR or lower limit of the confidence interval}
  \item{lower}{lower hinge, 25\% quantile}
  \item{notchlower}{lower edge of notch = median - 1.58 * IQR / sqrt(n)}
  \item{middle}{median, 50\% quantile}
  \item{notchupper}{upper edge of notch = median + 1.58 * IQR / sqrt(n)}
  \item{upper}{upper hinge, 75\% quantile}
  \item{ymax}{upper whisker = largest observation less than or equal to upper hinge + 1.5 * IQR  or upper limit of the confidence interval}
}
}

\examples{
\dontrun{
p <- ggplot(mpg, aes(class, hwy))
p + geom_boxplot2()
p + geom_boxplot2(outlier.position = 'identity', coef = 90)
# Orientation follows the discrete axis
ggplot(mpg, aes(hwy, class)) + geom_boxplot2()

p + geom_boxplot2(notch = TRUE)
p + geom_boxplot2(varwidth = TRUE)
p + geom_boxplot2(fill = "white", colour = "#3366FF")

# Boxplots are automatically dodged when any aesthetic is a factor
p + geom_boxplot2(aes(colour = drv))

# You can also use boxplots with continuous x, as long as you supply
# a grouping variable. cut_width is particularly useful
ggplot(diamonds, aes(carat, price)) +
  geom_boxplot2()
ggplot(diamonds, aes(carat, price)) +
  geom_boxplot2(aes(group = cut_width(carat, 0.25)))
# Adjust the transparency of outliers using outlier.alpha
ggplot(diamonds, aes(carat, price)) +
  geom_boxplot2(aes(group = cut_width(carat, 0.25)), outlier.alpha = 0.1)

\donttest{
# It's possible to draw a boxplot with your own computations if you
# use stat = "identity":
y <- rnorm(100)
df <- data.frame(
  x = 1,
  y0 = min(y),
  y25 = quantile(y, 0.25),
  y50 = median(y),
  y75 = quantile(y, 0.75),
  y100 = max(y)
)
ggplot(df, aes(x)) +
  geom_boxplot2(
   aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),
   stat = "identity"
 )
}
}
}
\references{
McGill, R., Tukey, J. W. and Larsen, W. A. (1978) Variations of
    box plots. The American Statistician 32, 12-16.
}
\seealso{
[geom_boxplot()] for original ggplot2 geom function.
}
